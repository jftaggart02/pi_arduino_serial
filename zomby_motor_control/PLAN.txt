Computer code:
1. import serial library
2. begin serial communication with Arduino
3. wait for arduino to indicate that it's ready
4. send continuous stream of motor commands to make the motors spin up slowly and spin down
slowly.

Maybe what I could do is start 2 threads: one for right and one for left side motors.
Each thread sends motor speed info every 10ms.
It sends whatever the motor_speed attribute is. To change the motor speed in the program,
all you need to do is change the motor_speed attribute. The threads will then start sending
that new value every 10 ms.

The reason I want to do this is for the Arduino end. If the arduino stops receiving the stream
of motor speed info, it will set the desired speed to 0 and the motors will spin down.

Actually I think it would be better to do 1 thread that updates both motor speeds at the same time. That way, I can ensure
that the computer is sending the right and left motor speeds one right after the other. Then, in my Arduino code, I can 
wait for 4 bytes to appear in the input buffer and update both desired motor speeds at the same time.

Arduino code:

void loop () {

    Get RC switch value;

    If (switch == on)
        // RC Logic

    Else {

        if there are 2 bytes in input buffer
            desired = serial message;
        else
            desired = 0;

        If (speed < desired)
            speed ++;
        Else If (speed > desired)
            speed --;
        write motors to speed;
        Delay 10 ms;

    }

}